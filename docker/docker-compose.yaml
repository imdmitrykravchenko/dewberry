version: "3.9"

services:
  nginx:
    image: nginx:latest
    depends_on:
      - api
      - frontend
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx/conf.template:/etc/nginx/conf.d/conf.template
      - ./nginx/certs:/etc/ssl/certs
    environment:
      - DEV_IP=docker.for.mac.localhost
      - PROJECT_NAME=${PROJECT_NAME}
    command: /bin/bash -c "envsubst < /etc/nginx/conf.d/conf.template > /etc/nginx/nginx.conf && nginx -g 'daemon off;'"

  postgres:
    image: postgres:14-alpine
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ./data/postgresql:/var/lib/postgresql/data

  api:
    build:
      context: ../
      dockerfile: ./src/api/Dockerfile
    stdin_open: true
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ../src:/usr/src/app/src
      - ../global.d.ts:/usr/src/app/

  frontend:
    build:
      context: ../
      dockerfile: ./src/frontend/Dockerfile
    stdin_open: true
    volumes:
      - ../src:/usr/src/app/src
      - ../global.d.ts:/usr/src/app/
      - ../craq.config.json:/usr/src/app/

  cdn:
    image: jbergknoff/s3rver
    volumes:
      - ./data/s3:/tmp
    ports:
      - 5000:5000
